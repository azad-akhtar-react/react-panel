{"version":3,"sources":["utility/AuthService.js","utility/hooks/useSkin.js","services/authService.js","@core/components/avatar/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","assets/images/portrait/small/avatar-s-11.jpg","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","utility/Utils.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useLayout.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","navigation/vertical/adminMenu.js","navigation/vertical/index.js","layouts/VerticalLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/index.js","layouts/HorizontalLayout.js","@core/layouts/components/layout-wrapper/index.js","@core/components/routes/PublicRoute.js","@core/components/routes/PrivateRoute.js","router/routes/index.js","router/Router.js","App.js"],"names":["setUserSession","token","user","reFreshToken","Cookies","set","JSON","stringify","expires","getToken","get","parse","removeUserSession","remove","useSkin","dispatch","useDispatch","store","useSelector","state","layout","useEffect","element","window","document","body","classList","skin","add","dark","bordered","setSkin","type","handleSkin","baseUrl","process","loginService","input","axios","post","headers","Accept","logoutService","navigate","userGetProfile","Authorization","userUpdateProfile","Avatar","forwardRef","props","ref","img","size","icon","color","status","badgeUp","content","Tag","tag","initials","imgWidth","className","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","BlankLayout","useState","isMounted","setIsMounted","Customizer","isRtl","setIsRtl","isHidden","setLayout","navbarType","footerType","navbarColor","setIsHidden","contentWidth","menuCollapsed","setLastLayout","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","open","href","onClick","options","wheelPropagation","skinsArr","name","label","checked","map","radio","index","marginCondition","length","id","onChange","for","renderSkinsRadio","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","children","visible","setVisible","addEventListener","pageYOffset","scroll","top","behavior","Footer","Date","getFullYear","target","rel","UserDropdown","useNavigate","formValue","setFromValue","selectProfileAgain","localStorage","getItem","getSingleData","catch","error","result","data","setProfileAgain","isRefresh","timeoutId","setTimeout","clearTimeout","photo","defaultAvatar","end","toast","clear","NavbarUser","ThemeNavbar","setMenuVisibility","isObjEmpty","obj","Object","keys","isUserLoggedIn","getUserData","getHomeRouteForLoggedInUser","DefaultRoute","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","to","role","themeConfig","app","appName","VerticalNavMenuLink","item","activeItem","LinkTag","externalLink","NavLink","t","useTranslation","disabled","active","navLink","newTab","isActive","title","badge","hasActiveChild","currentUrl","child","includes","removeChildren","openGroup","currentActiveGroup","indexOf","splice","checkForVisibleChild","arr","ability","some","i","console","log","can","action","resource","canViewMenuGroup","useContext","AbilityContext","hasAnyVisibleChild","VerticalNavMenuGroup","groupOpen","parentItem","groupActive","setGroupActive","setCurrentActiveGroup","location","useLocation","currentURL","pathname","onCollapseClick","parent","activeGroup","toggleOpenGroup","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","menuData","setActiveItem","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","onScrollY","container","scrollTop","current","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","value","handleRTL","useLayout","handleLayout","breakpoint","innerWidth","lastLayout","handleLastLayout","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","VerticalLayout","navbar","footer","menuVisibility","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","menuHidden","val","handleMenuCollapsed","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","expand","light","show","customizer","handleMenuHidden","handleContentWidth","adminMenu","navigation","HorizontalNavMenuLink","isChild","setMenuOpen","commonClass","applyHeight","enabled","phase","fn","stylesObj","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","clientHeight","maxHeight","overflowY","ddRef","left","closest","styles","HorizontalNavMenuGroup","submenu","menuOpen","popperElement","setPopperElement","referenceElement","setReferenceElement","popperOffsetHorizontal","popperPlacement","popperPlacementSubMenu","usePopper","placement","modifiers","offset","update","attributes","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","routerProps","currentActiveItem","LayoutWrapper","routeMeta","navbarStore","layoutStored","appLayoutCondition","appLayout","Fragment","query","memo","PublicRoute","route","restrictedRoute","meta","restricted","fallback","PrivateRoute","userToken","getLayout","blank","vertical","horizontal","Error","lazy","Login","ProfileUpdate","DashboardPage","TestPage","Routes","path","publicRoute","replace","MergeLayoutRoutes","defaultLayout","LayoutRoutes","filter","isBlank","RouteTag","Wrapper","getRouteMeta","Router","allRoutes","AllRoutes","layoutItem","getRoutes","useRoutes","App"],"mappings":"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","file":"static/js/9.bffb3bbb.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\n\n// save the token and user into the Cookies and expired in 1 day\n// const tomorrow = new Date();\n// tomorrow.setDate(today.getDate() + 1);\n\nexport const setUserSession = (token, user, reFreshToken) => {\n    Cookies.set('user', JSON.stringify(user))\n    Cookies.set('token', JSON.stringify(token), { expires: 1 })\n    Cookies.set('reFreshToken', JSON.stringify(reFreshToken))\n}\n\nexport const getToken = () => {\n    const token = Cookies.get('token')\n    if (token) return JSON.parse(token)\n    return null\n}\nexport const getReFreshToken = () => {\n    const reFreshToken = Cookies.get('reFreshToken')\n    if (reFreshToken) return JSON.parse(reFreshToken)\n    return null\n}\n\n// remove the token and user from the Cookies\nexport const removeUserSession = () => {\n    Cookies.remove('token')\n    Cookies.remove('user')\n    Cookies.remove('reFreshToken')\n}\n\n// update user session\n// export const updateUserSession = (user) => {\n//     Cookies.remove('user')\n//     Cookies.set('user', JSON.stringify(user), { expires: 7 })\n// }\n\n// return the user data from the Cookies\nexport const getUser = () => {\n    const userStr = Cookies.get('user')\n    if (userStr) return JSON.parse(userStr)\n    return null\n}\n\n// return the token from the Cookies\n// export const getToken = () =>  Cookies.get('token') || null;\n\n// here we re storing re fresh token in place of token\nexport const updateUserSession = (reFreshToken) => {\n    Cookies.set('token', JSON.stringify(reFreshToken))\n}\n\n// save the temporary token into the Cookies and expired in 7 days\nexport const setTemporarySession = (token) => {\n    Cookies.set('temporary_session', JSON.stringify(token), { expires: 7 })\n}\n\n// return the token from the Cookies\nexport const getTemporarySession = () => {\n    const TemporaryStr = Cookies.get('temporary_session')\n    if (TemporaryStr) return JSON.parse(TemporaryStr)\n    return null\n}\n\n// remove the temporary token\nexport const removeTemporarySession = () => {\n    Cookies.remove('temporary_session')\n}","// ** React Imports\nimport { useEffect } from \"react\"\n\n// ** Store Imports\nimport { handleSkin } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useSkin = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setSkin = (type) => {\n    dispatch(handleSkin(type))\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: \"dark-layout\",\n      bordered: \"bordered-layout\",\n      \"semi-dark\": \"semi-dark-layout\"\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (store.skin !== \"light\") {\n      element.classList.add(classNames[store.skin])\n    }\n  }, [store.skin])\n\n  return { skin: store.skin, setSkin }\n}\n","\nimport axios from \"axios\"\n\n// Auth-Services\nimport { removeUserSession } from \"../utility/AuthService\"\n\nconst baseUrl = process.env.REACT_APP_API_BASEURL\n\n// const getToken = localStorage.getItem('auth')\n// const myToken = getToken?.token\n\nexport const loginService = (input) => axios.post(`${baseUrl}/login`,\ninput,\n{\n    headers: {\n        Accept: 'application/json',\n        // 'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8',\n        'Access-Control-Allow-Origin': '*'\n    }\n})\n\nexport const logoutService = (navigate) => {\n    removeUserSession()\n    navigate('/login')\n}\n\nexport const logoutServiceAdmin = ({ token }) => axios.get(`${baseUrl}/logout`,\n    {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json'\n        }\n    })\n\nexport const userGetProfile = ({ token }) => axios.get(`${baseUrl}/profile`,\n    {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json'\n        }\n    })\n\nexport const userUpdateProfile = ({ token }, input) => axios.post(`${baseUrl}/profile`, input,\n\n    {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json'\n        }\n    })\n\nexport const userGetCurrentPassword = ({ token }) => axios.get(`${baseUrl}/admin/auth/profile`, {},\n    {\n\n        headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json'\n        }\n    }\n\n)\n\nexport const userUpdatePassword = ({ token }, formData) => axios.post(`${baseUrl}/admin/auth/change-password`, formData,\n    {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'multipart/form-data',\n        }\n    }\n)\n\nexport const userListService = ({ countPerPage, page, token }) => axios.get(`${baseUrl}/admin/customer/list?paginate=1&page=${page}&perPage=${countPerPage}`, {\n    headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: 'application/json'\n    }\n})\n\nexport const userSearchService = ({ search, countPerPage, token }) => axios.get(`${baseUrl}/admin/customer/list?keyword=${search}&paginate=1&&perPage=${countPerPage}`, {\n    headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: 'application/json'\n    }\n})\n\nexport const userStatusUpdateService = ({ id, token }) => axios.post(\n    `${baseUrl}/admin/customer/status/${id}`,\n    {},\n    {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json'\n        }\n    }\n)\n\nexport default { loginService, userListService, userUpdateProfile, userUpdatePassword, userGetProfile, userGetCurrentPassword }","// ** React Imports\nimport { forwardRef } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Badge } from \"reactstrap\"\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = (str) => {\n    const results = []\n    const wordArray = str.split(\" \")\n    wordArray.forEach((e) => {\n      results.push(e[0])\n    })\n    return results.join(\"\")\n  }\n\n  return (\n    <Tag\n      className={classnames(\"avatar\", {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames(\"avatar-content\", {\n            \"position-relative\": badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge\n              color={badgeColor ? badgeColor : \"primary\"}\n              className=\"badge-sm badge-up\"\n              pill\n            >\n              {badgeText ? badgeText : \"0\"}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt=\"avatarImg\"\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf([\"sm\", \"lg\", \"xl\"]),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf([\"online\", \"offline\", \"away\", \"busy\"]),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"warning\",\n    \"dark\",\n    \"light-primary\",\n    \"light-secondary\",\n    \"light-success\",\n    \"light-danger\",\n    \"light-info\",\n    \"light-warning\",\n    \"light-dark\"\n  ]),\n  color: Proptypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"warning\",\n    \"dark\",\n    \"light-primary\",\n    \"light-secondary\",\n    \"light-success\",\n    \"light-danger\",\n    \"light-info\",\n    \"light-warning\",\n    \"light-dark\"\n  ]),\n  initials(props) {\n    if (props[\"initials\"] && props[\"content\"] === undefined) {\n      return new Error(\"content prop is required with initials prop.\")\n    }\n    if (props[\"initials\"] && typeof props[\"content\"] !== \"string\") {\n      return new Error(\"content prop must be a string.\")\n    }\n    if (\n      typeof props[\"initials\"] !== \"boolean\" &&\n      props[\"initials\"] !== undefined\n    ) {\n      return new Error(\"initials must be a boolean!\")\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: \"div\"\n}\n","// ** React Imports\nimport { Outlet } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\n\n// ** Custom Hooks\nimport { useSkin } from \"@hooks/useSkin\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\nconst BlankLayout = () => {\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  // ** Hooks\n  const { skin } = useSkin()\n\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\"blank-page\", {\n        \"dark-layout\": skin === \"dark\"\n      })}\n    >\n      <div className=\"app-content content\">\n        <div className=\"content-wrapper\">\n          <div className=\"content-body\">\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from \"react\"\n\n// ** Third Party Components\nimport Select from \"react-select\"\nimport classnames from \"classnames\"\nimport { Settings, X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\n\n// ** Reactstrap Imports\nimport { Input, Label } from \"reactstrap\"\n\n// ** Styles\nimport \"@styles/react/libs/react-select/_react-select.scss\"\n\nconst Customizer = (props) => {\n  // ** Props\n  const {\n    skin,\n    isRtl,\n    layout,\n    setSkin,\n    setIsRtl,\n    isHidden,\n    setLayout,\n    navbarType,\n    footerType,\n    navbarColor,\n    setIsHidden,\n    contentWidth,\n    menuCollapsed,\n    setLastLayout,\n    setNavbarType,\n    setFooterType,\n    setNavbarColor,\n    setContentWidth,\n    setMenuCollapsed\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = (e) => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: \"light\",\n        label: \"Light\",\n        checked: skin === \"light\"\n      },\n      {\n        name: \"bordered\",\n        label: \"Bordered\",\n        checked: skin === \"bordered\"\n      },\n      {\n        name: \"dark\",\n        label: \"Dark\",\n        checked: skin === \"dark\"\n      },\n      {\n        name: \"semi-dark\",\n        label: \"Semi Dark\",\n        checked: skin === \"semi-dark\"\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === \"horizontal\" && radio.name === \"semi-dark\") {\n        return null\n      }\n\n      return (\n        <div\n          key={index}\n          className={classnames(\"form-check\", { \"mb-2 me-1\": marginCondition })}\n        >\n          <Input\n            type=\"radio\"\n            id={radio.name}\n            checked={radio.checked}\n            onChange={() => setSkin(radio.name)}\n          />\n          <Label className=\"form-check-label\" for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = [\n      \"white\",\n      \"primary\",\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"info\",\n      \"warning\",\n      \"dark\"\n    ]\n\n    return colorsArr.map((color) => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === \"white\"\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: \"floating\",\n        label: \"Floating\",\n        checked: navbarType === \"floating\"\n      },\n      {\n        name: \"sticky\",\n        label: \"Sticky\",\n        checked: navbarType === \"sticky\"\n      },\n      {\n        name: \"static\",\n        label: \"Static\",\n        checked: navbarType === \"static\"\n      },\n      {\n        name: \"hidden\",\n        label: \"Hidden\",\n        checked: navbarType === \"hidden\"\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === \"horizontal\" && radio.name === \"hidden\") {\n        return null\n      }\n\n      return (\n        <div\n          key={index}\n          className={classnames(\"form-check\", { \"mb-2 me-1\": marginCondition })}\n        >\n          <Input\n            type=\"radio\"\n            id={radio.name}\n            checked={radio.checked}\n            onChange={() => setNavbarType(radio.name)}\n          />\n          <Label className=\"form-check-label\" for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: \"sticky\",\n        label: \"Sticky\",\n        checked: footerType === \"sticky\"\n      },\n      {\n        name: \"static\",\n        label: \"Static\",\n        checked: footerType === \"static\"\n      },\n      {\n        name: \"hidden\",\n        label: \"Hidden\",\n        checked: footerType === \"hidden\"\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <div\n          key={index}\n          className={classnames(\"form-check\", { \"mb-2 me-1\": marginCondition })}\n        >\n          <Input\n            type=\"radio\"\n            checked={radio.checked}\n            id={`footer-${radio.name}`}\n            onChange={() => setFooterType(radio.name)}\n          />\n          <Label className=\"form-check-label\" for={`footer-${radio.name}`}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={classnames(\"customizer d-none d-md-block\", {\n        open: openCustomizer\n      })}\n    >\n      <a\n        href=\"/\"\n        className=\"customizer-toggle d-flex align-items-center justify-content-center\"\n        onClick={handleToggle}\n      >\n        <Settings size={14} className=\"spinner\" />\n      </a>\n      <PerfectScrollbar\n        className=\"customizer-content\"\n        options={{ wheelPropagation: false }}\n      >\n        <div className=\"customizer-header px-2 pt-1 pb-0 position-relative\">\n          <h4 className=\"mb-0\">Theme Customizer</h4>\n          <p className=\"m-0\">Customize & Preview in Real Time</p>\n          <a href=\"/\" className=\"customizer-close\" onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">Skin</p>\n            <div className=\"d-flex\">{renderSkinsRadio()}</div>\n          </div>\n\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">Content Width</p>\n            <div className=\"d-flex\">\n              <div className=\"form-check me-1\">\n                <Input\n                  type=\"radio\"\n                  id=\"full-width\"\n                  checked={contentWidth === \"full\"}\n                  onChange={() => setContentWidth(\"full\")}\n                />\n                <Label className=\"form-check-label\" for=\"full-width\">\n                  Full Width\n                </Label>\n              </div>\n              <div className=\"form-check\">\n                <Input\n                  id=\"boxed\"\n                  type=\"radio\"\n                  checked={contentWidth === \"boxed\"}\n                  onChange={() => setContentWidth(\"boxed\")}\n                />\n                <Label className=\"form-check-label\" for=\"boxed\">\n                  Boxed\n                </Label>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-switch mb-2 ps-0\">\n            <div className=\"d-flex\">\n              <p className=\"fw-bold me-auto mb-0\">RTL</p>\n              <Input\n                type=\"switch\"\n                id=\"rtl\"\n                name=\"RTL\"\n                checked={isRtl}\n                onChange={() => setIsRtl(!isRtl)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          <p className=\"fw-bold\">Menu Layout</p>\n          <div className=\"mb-2\">\n            <div className=\"d-flex align-items-center\">\n              <div className=\"form-check me-1\">\n                <Input\n                  type=\"radio\"\n                  id=\"vertical-layout\"\n                  checked={layout === \"vertical\"}\n                  onChange={() => {\n                    setLayout(\"vertical\")\n                    setLastLayout(\"vertical\")\n                  }}\n                />\n                <Label className=\"form-check-label\" for=\"vertical-layout\">\n                  Vertical\n                </Label>\n              </div>\n              <div className=\"form-check\">\n                <Input\n                  type=\"radio\"\n                  id=\"horizontal-layout\"\n                  checked={layout === \"horizontal\"}\n                  onChange={() => {\n                    setLayout(\"horizontal\")\n                    setLastLayout(\"horizontal\")\n                  }}\n                />\n                <Label className=\"form-check-label\" for=\"horizontal-layout\">\n                  Horizontal\n                </Label>\n              </div>\n            </div>\n          </div>\n          {layout !== \"horizontal\" ? (\n            <div className=\"form-switch mb-2 ps-0\">\n              <div className=\"d-flex align-items-center\">\n                <p className=\"fw-bold me-auto mb-0\">Menu Collapsed</p>\n                <Input\n                  type=\"switch\"\n                  id=\"menu-collapsed\"\n                  name=\"menu-collapsed\"\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </div>\n          ) : null}\n\n          <div className=\"form-switch mb-2 ps-0\">\n            <div className=\"d-flex align-items-center\">\n              <p className=\"fw-bold me-auto mb-0\">Menu Hidden</p>\n              <Input\n                type=\"switch\"\n                id=\"menu-hidden\"\n                name=\"menu-hidden\"\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          {layout !== \"horizontal\" ? (\n            <div className=\"mb-2\">\n              <p className=\"fw-bold\">Navbar Color</p>\n              <ul className=\"list-inline unstyled-list\">\n                {renderNavbarColors()}\n              </ul>\n            </div>\n          ) : null}\n\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">\n              {layout === \"horizontal\" ? \"Menu\" : \"Navbar\"} Type\n            </p>\n            <div className=\"d-flex\">{renderNavbarTypeRadio()}</div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">Footer Type</p>\n            <div className=\"d-flex\">{renderFooterTypeRadio()}</div>\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** React Imports\nimport { useEffect, useState } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\n\nconst ScrollTop = (props) => {\n  // ** Props\n  const { showOffset, scrollBehaviour, children, ...rest } = props\n\n  // ** State\n  const [visible, setVisible] = useState(false)\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener(\"scroll\", () => {\n        if (window.pageYOffset >= showOffset) {\n          setVisible(true)\n        } else {\n          setVisible(false)\n        }\n      })\n    }\n  }, [])\n\n  const handleScrollToTop = () => {\n    window.scroll({ top: 0, behavior: scrollBehaviour })\n  }\n\n  return (\n    visible && (\n      <div className=\"scroll-to-top\" onClick={handleScrollToTop} {...rest}>\n        {children}\n      </div>\n    )\n  )\n}\n\nexport default ScrollTop\n\n// ** PropTypes\nScrollTop.propTypes = {\n  showOffset: Proptypes.number,\n  children: Proptypes.any.isRequired,\n  scrollBehaviour: Proptypes.oneOf([\"smooth\", \"instant\", \"auto\"])\n}\n\nScrollTop.defaultProps = {\n  scrollBehaviour: \"smooth\"\n}\n","// ** Icons Import\nimport { Heart } from \"react-feather\"\n\nconst Footer = () => {\n  return (\n    <p className=\"clearfix mb-0\">\n      <span className=\"float-md-start d-block d-md-inline-block mt-25\">\n        COPYRIGHT © {new Date().getFullYear()}{\" \"}\n        <a\n          href=\"#\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          CNAPP\n        </a>\n        <span className=\"d-none d-sm-inline-block\">, All rights Reserved</span>\n      </span>\n      {/* <span className=\"float-md-end d-none d-md-block\">\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span> */}\n    </p>\n  )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** React Imports\nimport React, { Fragment, useState, forwardRef, useEffect } from 'react'\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n// left drop\n\n// ** Third Party Components\nimport {\n  User,\n  Mail,\n  CheckSquare,\n  MessageSquare,\n  Settings,\n  CreditCard,\n  HelpCircle,\n  Lock,\n  Power\n} from \"react-feather\"\n\n// ** Reactstrap Imports\nimport {\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem\n} from \"reactstrap\"\n\n// ** Custom Components\nimport * as Icons from 'react-feather'\nimport Avatar from '@components/avatar'\nimport toast from 'react-hot-toast'\n// ** Default Avatar Image\nimport defaultAvatar from \"@src/assets/images/portrait/small/avatar-s-11.jpg\"\n\n// API-Services\nimport { logoutService, userGetProfile } from '../../../../services/authService'\nimport { removeUserSession, getToken } from '../../../../utility/AuthService'\n\n// Redux-Settings\nimport {\n  setProfileAgain,\n  selectProfileAgain,\n} from '../../../../redux/slices/auth.Slice'\n\nconst UserDropdown = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const token = getToken()\n  const [formValue, setFromValue] = useState('');\n  const dataFresh = useSelector(selectProfileAgain)\n  const user = JSON.parse(localStorage.getItem(\"userData\"))\n\n  const handleProfileRoute = () => {\n    navigate(`/admin/profile/update/${user?.id}`)\n  }\n  const handlePasswordRoute = () => {\n    navigate(`/admin/password/update`)\n  }\n  const handleLogOut = () => {\n    toast(() => (\n      <div className='d-flex'>\n        <div className='me-1'>\n          <Avatar size='sm' color='success' icon={<Icons.Check size={12} />} />\n        </div>\n        <div className='d-flex flex-column'>\n          <h6 className='toast-title'>Logout successfully</h6>\n          {/* <span role='img' aria-label='toast-text'>\n            {icon}\n          </span> */}\n        </div>\n      </div>\n    ))\n    logoutService(navigate)\n    removeUserSession()\n    localStorage.clear()\n    // navigate('/'); \n  }\n\n  const getSingleData = async () => {\n    const result = await userGetProfile({ token }).catch((error) => {\n      // const expireToken = error.response.data.message\n      // console.log('MyError', expireToken)\n      // if (expireToken === 'Unauthorized or Token expired') {\n      //   toast.success('Session Expired')\n      //   logoutService(navigate)\n      //   removeUserSession()\n      //   localStorage.clear()\n      // }\n    });\n    if (result?.data?.name) {\n      setFromValue(result?.data)\n      dispatch(setProfileAgain({ isRefresh: false }))\n    }\n  };\n\n  // useEffect(() => {  Unauthorized or Token expired\n  //   console.log('Before again call')\n  //   if (dataFresh) {  // dataFresh mean true (its boolean)\n  //     console.log('again call')\n  //     getSingleData()\n  //   }\n  // }, [])\n\n  useEffect(() => {\n    getSingleData()\n    // if (dataFresh) { \n    //   console.log('again call')\n    //   getSingleData()\n    // }\n    const timeoutId = setTimeout(() => 3000)\n    return function cleanup() {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <UncontrolledDropdown tag=\"li\" className=\"dropdown-user nav-item\">\n      <DropdownToggle\n        href=\"/\"\n        tag=\"a\"\n        className=\"nav-link dropdown-user-link\"\n        onClick={(e) => e.preventDefault()}\n      >\n        <div className=\"user-nav d-sm-flex d-none\">\n          <span className=\"user-name fw-bold\"> {formValue?.name ? formValue?.name : 'Admin'}</span>\n          <span className=\"user-status\">Admin</span>\n        </div>\n        {formValue.photo ? <Avatar\n          img={formValue.photo}\n          imgHeight=\"40\"\n          imgWidth=\"40\"\n          status=\"online\"\n        /> : <Avatar\n          img={defaultAvatar}\n          imgHeight=\"40\"\n          imgWidth=\"40\"\n          status=\"online\"\n        />}\n      </DropdownToggle>\n      <DropdownMenu end>\n       <DropdownItem onClick={handleProfileRoute}>\n          <User size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Profile</span>\n        </DropdownItem>\n         {/* \n        <DropdownItem onClick={handlePasswordRoute}>\n          <Lock size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Password Change</span>\n        </DropdownItem> */}\n\n        {/* <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <Mail size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Inbox</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <CheckSquare size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Tasks</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <MessageSquare size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Chats</span>\n        </DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem\n          tag={Link}\n          to=\"/pages/\"\n          onClick={(e) => e.preventDefault()}\n        >\n          <Settings size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Settings</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <CreditCard size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Pricing</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <HelpCircle size={14} className=\"me-75\" />\n          <span className=\"align-middle\">FAQ</span>\n        </DropdownItem> */}\n        <DropdownItem onClick={handleLogOut}>\n          <Power size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport UserDropdown from \"./UserDropdown\"\n\nconst NavbarUser = () => {\n  return (\n    <ul className=\"nav navbar-nav align-items-center ms-auto\">\n      <UserDropdown />\n    </ul>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Custom Components\nimport NavbarUser from \"./NavbarUser\"\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from \"reactstrap\"\n\nconst ThemeNavbar = (props) => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === \"dark\") {\n      return <Sun className=\"ficon\" onClick={() => setSkin(\"light\")} />\n    } else {\n      return <Moon className=\"ficon\" onClick={() => setSkin(\"dark\")} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"bookmark-wrapper d-flex align-items-center\">\n        <ul className=\"navbar-nav d-xl-none\">\n          <NavItem className=\"mobile-menu me-auto\">\n            <NavLink\n              className=\"nav-menu-main menu-toggle hidden-xs is-active\"\n              onClick={() => setMenuVisibility(true)}\n            >\n              <Menu className=\"ficon\" />\n            </NavLink>\n          </NavItem>\n        </ul>\n        <NavItem className=\"d-none d-lg-block\">\n          <NavLink className=\"nav-link-style\">\n            {/* <ThemeToggler /> */}\n          </NavLink>\n        </NavItem>\n      </div>\n      <NavbarUser skin={skin} setSkin={setSkin} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","import { DefaultRoute } from \"../router/routes\"\n\n// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = (num) => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = (html) => html.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n// ** Checks if the passed date is today\nconst isToday = (date) => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (\n  value,\n  formatting = { month: \"short\", day: \"numeric\", year: \"numeric\" }\n) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat(\"en-US\", formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: \"short\", day: \"numeric\" }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: \"numeric\", minute: \"numeric\" }\n  }\n\n  return new Intl.DateTimeFormat(\"en-US\", formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\n// export const isUserLoggedIn = () => localStorage.getItem(\"auth\")\nconst isUserLoggedIn = JSON.parse(localStorage.getItem(\"auth\"))\nexport const getUserData = () => JSON.parse(localStorage.getItem(\"auth\"))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = () => {\n  // if (userRole === \"admin\") return DefaultRoute\n  // if (userRole === \"client\") return \"/access-control\"\n  if (isUserLoggedIn) return DefaultRoute\n  return \"/login\"   // \"/login\" doChange\n}\n \n// ** React Select Theme Colors\nexport const selectThemeColors = (theme) => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: \"#7367f01a\", // for option hover bg-color\n    primary: \"#000\", //  7367f0 for selected option bg-color\n    neutral10: \"#000\", // 7367f0 for tags bg-color\n    neutral20: \"#ededed\", // for input border-color\n    neutral30: \"#ededed\" // for input hover border-color\n  }\n})\n","// ** React Imports\nimport { useEffect } from \"react\"\nimport { NavLink } from \"react-router-dom\"\n\n// ** Icons Imports\nimport { Disc, X, Circle } from \"react-feather\"\n\n// ** Config\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from \"@utils\"\n\nconst VerticalMenuHeader = (props) => {\n  // ** Props\n  const {\n    menuCollapsed,\n    setMenuCollapsed,\n    setMenuVisibility,\n    setGroupOpen,\n    menuHover\n  } = props\n\n  // ** Vars\n  const user = getUserData()\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour=\"toggle-icon\"\n          className=\"text-primary toggle-icon d-none d-xl-block\"\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour=\"toggle-icon\"\n          className=\"text-primary toggle-icon d-none d-xl-block\"\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className=\"navbar-header\">\n      <ul className=\"nav navbar-nav flex-row\">\n        <li className=\"nav-item me-auto\">\n          <NavLink\n            to={user ? getHomeRouteForLoggedInUser(user.role) : \"/\"}\n            className=\"navbar-brand\"\n          >\n            {/* <span className=\"brand-logo\">\n              <img src={themeConfig.app.appLogoImage} alt=\"logo\" />\n            </span> */}\n            <h2 className=\"brand-text mb-0\">{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className=\"nav-item nav-toggle\">\n          <div className=\"nav-link modern-nav-toggle cursor-pointer\">\n            <Toggler />\n            <X\n              onClick={() => setMenuVisibility(false)}\n              className=\"toggle-icon icon-x d-block d-xl-none\"\n              size={20}\n            />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { NavLink } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { useTranslation } from \"react-i18next\"\n\n// ** Reactstrap Imports\nimport { Badge } from \"reactstrap\"\n\nconst VerticalNavMenuLink = ({ item, activeItem }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? \"a\" : NavLink\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  return (\n    <li\n      className={classnames({\n        \"nav-item\": !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className=\"d-flex align-items-center\"\n        target={item.newTab ? \"_blank\" : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || \"/\",\n            }\n          : {\n              to: item.navLink || \"/\",\n              className: ({ isActive }) => {\n                if (isActive && !item.disabled) {\n                  return \"d-flex align-items-center active\";\n                }\n              },\n            })}\n        onClick={(e) => {\n          if (\n            item.navLink.length === 0 ||\n            item.navLink === \"#\" ||\n            item.disabled === true\n          ) {\n            e.preventDefault();\n          }\n        }}\n      >\n        {item.icon}\n        <span className=\"menu-item text-truncate\">{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className=\"ms-auto me-1\" color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  );\n};\n\nexport default VerticalNavMenuLink;\n","/* eslint-disable implicit-arrow-linebreak */\n// ** React Imports \nimport { useContext } from \"react\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = (item) => {\n  if (item.header) return \"VerticalNavMenuSectionHeader\"\n  if (item.children) return \"VerticalNavMenuGroup\"\n  return \"VerticalNavMenuLink\"\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = (item) => {\n  if (item.children) return \"HorizontalNavMenuGroup\"\n  return \"HorizontalNavMenuLink\"\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps &&\n      routerProps.meta &&\n      routerProps.meta.navLink &&\n      routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if the given item has the given url\n * in one of its children\n *\n * @param item\n * @param activeItem\n */\nexport const hasActiveChild = (item, currentUrl) => {\n  const { children } = item\n\n  if (!children) {\n    return false\n  }\n\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true\n      }\n    }\n\n    // Check if the child has a link and is active\n    if (\n      child &&\n      child.navLink &&\n      currentUrl &&\n      (child.navLink === currentUrl || currentUrl.includes(child.navLink))\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Check if this is a children\n * of the given item\n *\n * @param children\n * @param openGroup\n * @param currentActiveGroup\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach((child) => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id)\n      if (index > -1) openGroup.splice(index, 1)\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\n    }\n  })\n}\n\nconst checkForVisibleChild = (arr, ability) => {\n  return arr.some((i) => {\n    if (i.children) {\n      console.log('child', i.children)\n      return checkForVisibleChild(i.children, ability)\n    } else {\n      return ability.can(i.action, i.resource)\n    }\n  })\n}\n\nexport const canViewMenuGroup = (item) => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild =\n    item.children && checkForVisibleChild(item.children, ability)\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = (item) => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { useTranslation } from \"react-i18next\"\n\n// ** Reactstrap Imports\nimport { Collapse, Badge } from \"reactstrap\"\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from \"./VerticalNavMenuItems\"\n\n// ** Utils\nimport { hasActiveChild, removeChildren } from \"@layouts/utils\"\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupOpen,\n  menuHover,\n  activeItem,\n  parentItem,\n  groupActive,\n  setGroupOpen,\n  menuCollapsed,\n  setGroupActive,\n  currentActiveGroup,\n  setCurrentActiveGroup,\n  ...rest\n}) => {\n  // ** Hooks\n  const { t } = useTranslation()\n  const location = useLocation()\n\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggle Open Group\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen\n    const activeGroup = groupActive\n\n    // ** If Group is already open and clicked, close the group\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1)\n\n      // ** If clicked Group has open group children, Also remove those children to close those groups\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive)\n      }\n    } else if (\n      activeGroup.includes(item.id) ||\n      currentActiveGroup.includes(item.id)\n    ) {\n      // ** If Group clicked is Active Group\n\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (\n        !activeGroup.includes(item.id) &&\n        currentActiveGroup.includes(item.id)\n      ) {\n        activeGroup.push(item.id)\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\n      }\n\n      // ** Update Active Group\n      setGroupActive([...activeGroup])\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive)\n      }\n\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n\n      // ** Empty Open Group array\n      openGroup = []\n\n      // ** Push current clicked group item to Open Group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    }\n    setGroupOpen([...openGroup])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem)\n\n    e.preventDefault()\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\n    } else {\n      const index = groupActive.indexOf(item.id)\n      if (index > -1) groupActive.splice(index, 1)\n    }\n    setGroupActive([...groupActive])\n    setCurrentActiveGroup([...groupActive])\n    setGroupOpen([])\n  }, [location])\n\n  // ** Returns condition to add open class\n  const openClassCondition = (id) => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true\n      }\n    } else if (\n      groupActive.includes(id) &&\n      menuCollapsed &&\n      menuHover === false\n    ) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames(\"nav-item has-sub\", {\n        open: openClassCondition(item.id),\n        \"menu-collapsed-open\": groupActive.includes(item.id),\n        \"sidebar-group-active\":\n          groupActive.includes(item.id) ||\n          groupOpen.includes(item.id) ||\n          currentActiveGroup.includes(item.id)\n      })}\n    >\n      <Link\n        className=\"d-flex align-items-center\"\n        to=\"/\"\n        onClick={(e) => onCollapseClick(e, item)}\n      >\n        {item.icon}\n        <span className=\"menu-title text-truncate\">{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className=\"ms-auto me-1\" color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className=\"menu-content\">\n        <Collapse\n          isOpen={\n            (groupActive && groupActive.includes(item.id)) ||\n            (groupOpen && groupOpen.includes(item.id))\n          }\n        >\n          <VerticalNavMenuItems\n            {...rest}\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            currentActiveGroup={currentActiveGroup}\n            setCurrentActiveGroup={setCurrentActiveGroup}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            activeItem={activeItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from \"react-feather\"\n\nconst VerticalNavMenuSectionHeader = ({ item }) => {\n  return (\n    <li className=\"navigation-header\">\n      <span>{item.header}</span>\n      <MoreHorizontal className=\"feather-more-horizontal\" />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from \"./VerticalNavMenuLink\"\nimport VerticalNavMenuGroup from \"./VerticalNavMenuGroup\"\nimport VerticalNavMenuSectionHeader from \"./VerticalNavMenuSectionHeader\"\n\n// ** Utils \nimport { canViewMenuGroup, resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from \"@layouts/utils\"\n\nconst VerticalMenuNavItems = (props) => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuLink,\n    VerticalNavMenuGroup,\n    VerticalNavMenuSectionHeader\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return (\n        canViewMenuGroup(item) && (\n          <TagName item={item} index={index} key={item.id} {...props} />\n        )\n      )\n    }\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from \"react\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from \"./VerticalMenuHeader\"\nimport VerticalNavMenuItems from \"./VerticalNavMenuItems\"\n\nconst Sidebar = (props) => {\n  // ** Props\n  const { menuCollapsed, menu, skin, menuData } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    setMenuHover(true)\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = (container) => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains(\"d-block\")) {\n        shadowRef.current.classList.add(\"d-block\")\n      }\n    } else {\n      if (shadowRef.current.classList.contains(\"d-block\")) {\n        shadowRef.current.classList.remove(\"d-block\")\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames(\n          \"main-menu menu-fixed menu-accordion menu-shadow\",\n          {\n            expanded: menuHover || menuCollapsed === false,\n            \"menu-light\": skin !== \"semi-dark\" && skin !== \"dark\",\n            \"menu-dark\": skin === \"semi-dark\" || skin === \"dark\"\n          }\n        )}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu({ ...props })\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader\n              setGroupOpen={setGroupOpen}\n              menuHover={menuHover}\n              {...props}\n            />\n            {/* Vertical Menu Header Shadow */}\n            <div className=\"shadow-bottom\" ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className=\"main-menu-content\"\n              options={{ wheelPropagation: false }}\n              onScrollY={(container) => scrollMenu(container)}\n            >\n              <ul className=\"navigation navigation-main\">\n                <VerticalNavMenuItems\n                  items={menuData}\n                  menuData={menuData}\n                  menuHover={menuHover}\n                  groupOpen={groupOpen}\n                  activeItem={activeItem}\n                  groupActive={groupActive}\n                  setGroupOpen={setGroupOpen}\n                  menuCollapsed={menuCollapsed}\n                  setActiveItem={setActiveItem}\n                  setGroupActive={setGroupActive}\n                  currentActiveGroup={currentActiveGroup}\n                  setCurrentActiveGroup={setCurrentActiveGroup}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\nimport { useEffect } from \"react\"\n\n// ** Store & Actions\nimport { handleRTL } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector((state) => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = (value) => {\n    dispatch(handleRTL(value))\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName(\"html\")[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute(\"dir\", \"rtl\")\n    } else {\n      element.setAttribute(\"dir\", \"ltr\")\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n","//** React Imports\nimport { useEffect } from \"react\"\n\n// ** Store Imports\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { handleLayout, handleLastLayout } from \"@store/layout\"\n\nexport const useLayout = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setLayout = (value) => {\n    dispatch(handleLayout(value))\n  }\n\n  const setLastLayout = (value) => {\n    dispatch(handleLastLayout(value))\n  }\n\n  if (window) {\n    const breakpoint = 1200\n\n    useEffect(() => {\n      if (window.innerWidth < breakpoint) {\n        setLayout(\"vertical\")\n      }\n\n      window.addEventListener(\"resize\", () => {\n        if (\n          window.innerWidth <= breakpoint &&\n          store.lastLayout !== \"vertical\" &&\n          store.layout !== \"vertical\"\n        ) {\n          setLayout(\"vertical\")\n        }\n        if (\n          window.innerWidth >= breakpoint &&\n          store.lastLayout !== store.layout\n        ) {\n          setLayout(store.lastLayout)\n        }\n      })\n    }, [store.layout])\n  }\n\n  return {\n    layout: store.layout,\n    setLayout,\n    lastLayout: store.lastLayout,\n    setLastLayout\n  }\n}\n","// ** Store Imports\nimport { handleNavbarType } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useNavbarType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setNavbarType = (type) => {\n    dispatch(handleNavbarType(type))\n  }\n\n  return { navbarType: store.navbarType, setNavbarType }\n}\n","// ** Store Imports\nimport { handleFooterType } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useFooterType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setFooterType = (type) => {\n    dispatch(handleFooterType(type))\n  }\n\n  return { setFooterType, footerType: store.footerType }\n}\n","// ** Store Imports\nimport { handleNavbarColor } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useNavbarColor = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  // ** Return a wrapped version of useState's setter function\n  const setNavbarColor = (value) => {\n    dispatch(handleNavbarColor(value))\n  }\n\n  return { navbarColor: store.navbarColor, setNavbarColor }\n}\n","// ** React Imports\nimport { useState, useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\"\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  handleMenuCollapsed,\n  handleContentWidth,\n  handleMenuHidden\n} from \"@store/layout\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { ArrowUp } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { Navbar, Button } from \"reactstrap\"\n\n// ** Configs\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Custom Components\n\nimport Customizer from \"@components/customizer\"\nimport ScrollToTop from \"@components/scrolltop\"\nimport FooterComponent from \"./components/footer\"\nimport NavbarComponent from \"./components/navbar\"\nimport SidebarComponent from \"./components/menu/vertical-menu\"\n\n// ** Custom Hooks\nimport { useRTL } from \"@hooks/useRTL\"\nimport { useSkin } from \"@hooks/useSkin\"\nimport { useLayout } from \"@hooks/useLayout\"\nimport { useNavbarType } from \"@hooks/useNavbarType\"\nimport { useFooterType } from \"@hooks/useFooterType\"\nimport { useNavbarColor } from \"@hooks/useNavbarColor\"\n\n// ** Styles\nimport \"@styles/base/core/menu/menu-types/vertical-menu.scss\"\nimport \"@styles/base/core/menu/menu-types/vertical-overlay-menu.scss\"\n\nconst VerticalLayout = (props) => {\n  // ** Props\n  const { menu, navbar, footer, children, menuData } = props\n\n  // ** Hooks\n  const [isRtl, setIsRtl] = useRTL()\n  const { skin, setSkin } = useSkin()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector((state) => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const isHidden = layoutStore.menuHidden\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = (val) => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = (val) => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = (val) => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener(\"resize\", handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: \"footer-static\",\n    sticky: \"footer-fixed\",\n    hidden: \"footer-hidden\"\n  }\n\n  const navbarWrapperClasses = {\n    floating: \"navbar-floating\",\n    sticky: \"navbar-sticky\",\n    static: \"navbar-static\",\n    hidden: \"navbar-hidden\"\n  }\n\n  const navbarClasses = {\n    floating:\n      contentWidth === \"boxed\" ? \"floating-nav container-xxl\" : \"floating-nav\",\n    sticky: \"fixed-top\",\n    static: \"navbar-static-top\",\n    hidden: \"d-none\"\n  }\n\n  const bgColorCondition =\n    navbarColor !== \"\" && navbarColor !== \"light\" && navbarColor !== \"white\"\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${\n          navbarWrapperClasses[navbarType] || \"navbar-floating\"\n        } ${footerClasses[footerType] || \"footer-static\"}`,\n        {\n          // Modern Menu\n          \"vertical-menu-modern\": windowWidth >= 1200,\n          \"menu-collapsed\": menuCollapsed && windowWidth >= 1200,\n          \"menu-expanded\": !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          \"vertical-overlay-menu\": windowWidth < 1200,\n          \"menu-hide\": !menuVisibility && windowWidth < 1200,\n          \"menu-open\": menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { \"data-col\": \"1-column\" } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuData={menuData}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n        />\n      ) : null}\n\n      <Navbar\n        expand=\"lg\"\n        container={false}\n        light={skin !== \"dark\"}\n        dark={skin === \"dark\" || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${\n            navbarClasses[navbarType] || \"floating-nav\"\n          } navbar-shadow`\n        )}\n      >\n        <div className=\"navbar-container d-flex content\">\n          {navbar ? (\n            navbar({ skin, setSkin, setMenuVisibility })\n          ) : (\n            <NavbarComponent\n              setMenuVisibility={setMenuVisibility}\n              skin={skin}\n              setSkin={setSkin}\n            />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames(\"sidenav-overlay\", {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          menuCollapsed={menuCollapsed}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n          setMenuCollapsed={setMenuCollapsed}\n        />\n      ) : null}\n      <footer\n        className={classnames(\n          `footer footer-light ${footerClasses[footerType] || \"footer-static\"}`,\n          {\n            \"d-none\": footerType === \"hidden\"\n          }\n        )}\n      >\n        {footer ? (\n          footer\n        ) : (\n          <FooterComponent\n            footerType={footerType}\n            footerClasses={footerClasses}\n          />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className=\"scroll-to-top\">\n          <ScrollToTop showOffset={300} className=\"scroll-top d-block\">\n            <Button className=\"btn-icon\" color=\"primary\">\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","import { Mail, Home, Circle, Users, Lock, DollarSign, Settings, Database, Bell, BarChart2, Award, Sliders, Briefcase, ShoppingCart, Zap, MessageSquare, Gift, MapPin, Box, Inbox, AlertTriangle, Calendar, Truck, UserCheck } from \"react-feather\"\n\nexport default [\n\n    // {\n    //     id: 'dashboard',\n    //     title: 'Dashboards',\n    //     icon: <Home size={20} />,\n    //     badge: 'light-warning',\n    //     badgeText: '2',\n    //     children: [\n    //         {\n    //             id: 'analyticsDash',\n    //             title: 'Cloud Risk',\n    //             icon: <Circle size={12} />,\n    //             navLink: '/'\n    //         }\n    //     ]\n    // },\n\n    {\n        id: \"Dashboard\",\n        title: \"Dashboard\",\n        icon: <Home size={20} />,\n        navLink: \"/\"\n    },\n]","// ** Navigation imports\nimport adminMenu from './adminMenu'\n\n// ** Merge & Export \nexport default [...adminMenu]\n","// ** React Imports\nimport { Outlet } from \"react-router-dom\"\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from \"@layouts/VerticalLayout\"\n\n// ** Menu Items Array\nimport navigation from \"@src/navigation/vertical\"\n\nconst VerticalLayout = (props) => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n \n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default VerticalLayout\n","// ** React Imports\nimport { NavLink } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { useTranslation } from \"react-i18next\"\n\nconst HorizontalNavMenuLink = ({ item, isChild, setMenuOpen }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? \"a\" : NavLink\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    if (setMenuOpen) {\n      setMenuOpen(false)\n    }\n  }\n\n  return (\n    <li\n      onClick={handleClick}\n      className={classnames(\"nav-item\", {\n        disabled: item.disabled\n      })}\n    >\n      <LinkTag\n        className={classnames(\"d-flex align-items-center\", {\n          \"dropdown-item\": isChild,\n          \"nav-link\": !isChild\n        })}\n        target={item.newTab ? \"_blank\" : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || \"/\",\n            }\n          : {\n              to: item.navLink || \"/\",\n              className: ({ isActive }) => {\n                const commonClass = \"d-flex align-items-center\";\n                if (isActive && !item.disabled && item.navLink !== \"#\") {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item active`;\n                  } else {\n                    return `${commonClass} nav-link active`;\n                  }\n                } else {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item`;\n                  } else {\n                    return `${commonClass} nav-link`;\n                  }\n                }\n              },\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{t(item.title)}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { useState } from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { usePopper } from \"react-popper\"\nimport { useTranslation } from \"react-i18next\"\n\n// ** Utils\nimport { hasActiveChild } from \"@layouts/utils\"\n\n// ** Hooks\nimport { useRTL } from \"@hooks/useRTL\"\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from \"./HorizontalNavMenuItems\"\n\nconst applyHeight = {\n  enabled: true,\n  name: \"applyHeight\",\n  phase: \"beforeWrite\",\n  fn: (data) => {\n    const pageHeight = window.innerHeight,\n      popperEl = data.state.elements.popper,\n      ddTop = popperEl.getBoundingClientRect().top,\n      ddHeight = popperEl.clientHeight\n    let maxHeight, stylesObj\n    // ** Calculate and set height\n    if (pageHeight - ddTop - ddHeight - 28 < 1) {\n      maxHeight = pageHeight - ddTop - 25\n      stylesObj = {\n        maxHeight,\n        overflowY: \"auto\"\n      }\n    }\n    const ddRef = popperEl.getBoundingClientRect()\n    // ** If there is not space left to open sub menu open it to the right\n    if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n      popperEl.closest(\".dropdown\").classList.add(\"openLeft\")\n    }\n    data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\n  }\n}\n\nconst HorizontalNavMenuGroup = (props) => {\n  // ** Props\n  const { item, submenu, isChild } = props\n\n  // ** State\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [popperElement, setPopperElement] = useState(null)\n  const [referenceElement, setReferenceElement] = useState(null)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** Vars\n  const popperOffsetHorizontal = isRtl ? 16 : -16\n  const popperPlacement = isRtl ? \"bottom-end\" : \"bottom-start\"\n  const popperPlacementSubMenu = isRtl ? \"left-start\" : \"right-start\"\n\n  // ** Hooks\n  const { t } = useTranslation()\n  const currentURL = useLocation().pathname\n  const { update, styles, attributes } = usePopper(\n    referenceElement,\n    popperElement,\n    {\n      placement: isChild ? popperPlacementSubMenu : popperPlacement,\n      modifiers: [\n        applyHeight,\n        {\n          enabled: true,\n          name: \"offset\",\n          options: {\n            offset: isChild ? [-8, 15] : [popperOffsetHorizontal, 5]\n          }\n        }\n      ]\n    }\n  )\n\n  const handleMouseEnter = () => {\n    setMenuOpen(true)\n    update()\n  }\n\n  return (\n    <li\n      ref={setReferenceElement}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={() => setMenuOpen(false)}\n      className={classnames(\"dropdown\", {\n        show: menuOpen,\n        \"nav-item\": submenu === false,\n        \"dropdown-submenu\": submenu === true,\n        \"sidebar-group-active active\": hasActiveChild(item, currentURL)\n      })}\n    >\n      <Link\n        to=\"/\"\n        onClick={(e) => e.preventDefault()}\n        className={classnames(\"dropdown-toggle d-flex align-items-center\", {\n          \"dropdown-item\": submenu === true,\n          \"nav-link\": submenu === false\n        })}\n      >\n        {item.icon}\n        <span>{t(item.title)}</span>\n      </Link>\n      <ul\n        ref={setPopperElement}\n        style={{ ...styles.popper }}\n        {...attributes.popper}\n        className={classnames(\"dropdown-menu\", {\n          \"first-level\": submenu === false\n        })}\n      >\n        <HorizontalNavMenuItems\n          isChild={true}\n          submenu={true}\n          parentItem={item}\n          menuOpen={menuOpen}\n          items={item.children}\n          setMenuOpen={setMenuOpen}\n        />\n      </ul>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from \"./HorizontalNavMenuLink\"\nimport HorizontalNavMenuGroup from \"./HorizontalNavMenuGroup\"\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from \"@layouts/utils\"\n\nconst HorizontalNavMenuItems = (props) => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return (\n        canViewMenuGroup(item) && (\n          <TagName item={item} index={index} key={item.id} {...props} />\n        )\n      )\n    }\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from \"./HorizontalNavMenuItems\"\n\nconst HorizontalMenu = ({ menuData }) => {\n  return (\n    <div className=\"navbar-container main-menu-content\">\n      <ul className=\"nav navbar-nav\" id=\"main-menu-navigation\">\n        <HorizontalNavMenuItems submenu={false} items={menuData} />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { Link } from \"react-router-dom\"\nimport { useState, useEffect } from \"react\"\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { handleMenuHidden, handleContentWidth } from \"@store/layout\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { ArrowUp } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { Navbar, NavItem, Button } from \"reactstrap\"\n\n// ** Configs\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Custom Components\n\nimport Customizer from \"@components/customizer\"\nimport ScrollToTop from \"@components/scrolltop\"\nimport NavbarComponent from \"./components/navbar\"\nimport FooterComponent from \"./components/footer\"\nimport MenuComponent from \"./components/menu/horizontal-menu\"\n\n// ** Custom Hooks\nimport { useRTL } from \"@hooks/useRTL\"\nimport { useSkin } from \"@hooks/useSkin\"\nimport { useLayout } from \"@hooks/useLayout\"\nimport { useNavbarType } from \"@hooks/useNavbarType\"\nimport { useFooterType } from \"@hooks/useFooterType\"\nimport { useNavbarColor } from \"@hooks/useNavbarColor\"\n\n// ** Styles\nimport \"@styles/base/core/menu/menu-types/horizontal-menu.scss\"\n\nconst HorizontalLayout = (props) => {\n  // ** Props\n  const { navbar, menuData, footer, children, menu } = props\n\n  // ** Hooks\n  const { skin, setSkin } = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector((state) => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = (val) => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = (val) => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener(\"scroll\", function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: \"footer-static\",\n    sticky: \"footer-fixed\",\n    hidden: \"footer-hidden\"\n  }\n\n  const navbarWrapperClasses = {\n    floating: \"navbar-floating\",\n    sticky: \"navbar-sticky\",\n    static: \"navbar-static\"\n  }\n\n  const navbarClasses = {\n    floating:\n      contentWidth === \"boxed\" ? \"floating-nav container-xxl\" : \"floating-nav\",\n    sticky: \"fixed-top\"\n  }\n\n  const bgColorCondition =\n    navbarColor !== \"\" && navbarColor !== \"light\" && navbarColor !== \"white\"\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${\n          navbarWrapperClasses[navbarType] || \"navbar-floating\"\n        } ${footerClasses[footerType] || \"footer-static\"} menu-expanded`\n      )}\n      {...(isHidden ? { \"data-col\": \"1-column\" } : {})}\n    >\n      <Navbar\n        expand=\"lg\"\n        container={false}\n        className={classnames(\n          \"header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center\",\n          {\n            \"navbar-scrolled\": navbarScrolled\n          }\n        )}\n      >\n        {!navbar && (\n          <div className=\"navbar-header d-xl-block d-none\">\n            <ul className=\"nav navbar-nav\">\n              <NavItem>\n                <Link to=\"/\" className=\"navbar-brand\">\n                  {/* <span className=\"brand-logo\">\n                    <img src={themeConfig.app.appLogoImage} alt=\"logo\" />\n                  </span> */}\n                  <h2 className=\"brand-text mb-0\">{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className=\"navbar-container d-flex content\">\n          {navbar ? (\n            navbar({ skin, setSkin })\n          ) : (\n            <NavbarComponent skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className=\"horizontal-menu-wrapper\">\n          <Navbar\n            tag=\"div\"\n            expand=\"sm\"\n            light={skin !== \"dark\"}\n            dark={skin === \"dark\" || bgColorCondition}\n            className={classnames(\n              `header-navbar navbar-horizontal navbar-shadow menu-border`,\n              {\n                [navbarClasses[navbarType]]: navbarType !== \"static\",\n                \"floating-nav\":\n                  (!navbarClasses[navbarType] && navbarType !== \"static\") ||\n                  navbarType === \"floating\"\n              }\n            )}\n          >\n            {menu ? (\n              menu({ menuData, routerProps, currentActiveItem })\n            ) : (\n              <MenuComponent menuData={menuData} />\n            )}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n        />\n      ) : null}\n      <footer\n        className={classnames(\n          `footer footer-light ${footerClasses[footerType] || \"footer-static\"}`,\n          {\n            \"d-none\": footerType === \"hidden\"\n          }\n        )}\n      >\n        {footer ? (\n          footer\n        ) : (\n          <FooterComponent\n            footerType={footerType}\n            footerClasses={footerClasses}\n          />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className=\"scroll-to-top\">\n          <ScrollToTop showOffset={300} className=\"scroll-top d-block\">\n            <Button className=\"btn-icon\" color=\"primary\">\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","import { Mail, Home } from \"react-feather\"\n\nexport default [\n  {\n    id: \"home\",\n    title: \"Dashboard\",\n    icon: <Home size={20} />,\n    navLink: \"/home\"\n  }\n  // {\n  //   id: \"secondPage\",\n  //   title: \"Second Page\",\n  //   icon: <Mail size={20} />,\n  //   navLink: \"/second-page\"\n  // }\n]\n","// ** React Imports\nimport { Outlet } from \"react-router-dom\"\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from \"@layouts/HorizontalLayout\"\n\n// ** Menu Items Array\nimport navigation from \"@src/navigation/horizontal\"\n\nconst HorizontalLayout = (props) => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default HorizontalLayout\n","// ** React Imports\nimport { Fragment, useEffect, memo } from \"react\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  handleContentWidth,\n  handleMenuCollapsed,\n  handleMenuHidden\n} from \"@store/layout\"\n\n// ** ThemeConfig\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Styles\nimport \"animate.css/animate.css\"\n\nconst LayoutWrapper = (props) => {\n  // ** Props\n  const { children, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state)\n\n  const navbarStore = store.navbar\n  const layoutStored = store.layout.layout\n  const contentWidth = store.layout.contentWidth\n  //** Vars\n  const appLayoutCondition =\n    (layoutStored.layout === \"horizontal\" && !routeMeta) ||\n    (layoutStored.layout === \"horizontal\" && routeMeta && !routeMeta.appLayout)\n  const Tag = appLayoutCondition ? \"div\" : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (\n        routeMeta.contentWidth &&\n        routeMeta.contentWidth === store.layout.contentWidth\n      ) {\n        dispatch(handleContentWidth(themeConfig.layout.contentWidth))\n      }\n      if (\n        routeMeta.menuCollapsed &&\n        routeMeta.menuCollapsed === store.layout.menuCollapsed\n      ) {\n        dispatch(handleMenuCollapsed(!store.layout.menuCollapsed))\n      }\n      if (\n        routeMeta.menuHidden &&\n        routeMeta.menuHidden === store.layout.menuHidden\n      ) {\n        dispatch(handleMenuHidden(!store.layout.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [routeMeta])\n\n  return (\n    <div\n      className={classnames(\"app-content content overflow-hidden\", {\n        [routeMeta ? routeMeta.className : \"\"]:\n          routeMeta && routeMeta.className,\n        \"show-overlay\": navbarStore.query.length\n      })}\n    >\n      <div className=\"content-overlay\"></div>\n      <div className=\"header-navbar-shadow\" />\n      <div\n        className={classnames({\n          \"content-wrapper\": routeMeta && !routeMeta.appLayout,\n          \"content-area-wrapper\": routeMeta && routeMeta.appLayout,\n          \"container-xxl p-0\": contentWidth === \"boxed\"\n        })}\n      >\n        <Tag {...(appLayoutCondition ? { className: \"content-body\" } : {})}>\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(LayoutWrapper)\n","// ** React Imports\nimport { Suspense } from \"react\"\nimport { Navigate } from \"react-router-dom\"\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from \"@utils\"\n\nconst PublicRoute = ({ children, route }) => {\n  if (route) {\n    const user = getUserData()\n\n    const restrictedRoute = route.meta && route.meta.restricted\n\n    if (user && restrictedRoute) {\n      return <Navigate to={getHomeRouteForLoggedInUser(user)} />\n    }\n  }\n \n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PublicRoute\n","// ** React Imports\nimport { Navigate } from \"react-router-dom\"\nimport { useContext, Suspense } from \"react\"\n\n// ** Context Imports\nimport { AbilityContext } from \"@src/utility/context/Can\"\n\nconst PrivateRoute = ({ children, route }) => {\n  // ** Hooks & Vars \n  const ability = useContext(AbilityContext)\n  const userToken = JSON.parse(localStorage.getItem(\"auth\"))\n  const userAccess = JSON.parse(localStorage.getItem('userDataAuth'))\n  // const userToken = () => JSON.parse(localStorage.getItem(\"auth\"))\n  // const user = JSON.parse(localStorage.getItem(\"userData\"))\n\n  if (route) {\n    let action = null\n    let resource = null\n    let restrictedRoute = false\n\n    if (route.meta) {\n      action = route.meta.action // subMenu\n      resource = route.meta.resource\n      restrictedRoute = route.meta.restricted\n    } \n    if (!userToken) {\n      return <Navigate to=\"/login\" /> // doChange\n    } \n    if (userToken && restrictedRoute) {\n      return <Navigate to=\"/\" />\n    }\n    // if (userToken && restrictedRoute && user.role === \"client\") {\n    //   return <Navigate to=\"/access-control\" />\n    // }\n    // if (userToken && !ability.can(action || \"read\", resource)) {\n    //   // return <Navigate to=\"/misc/not-authorized\" replace />\n    //   return <Navigate to=\"/login\" />\n    // }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PrivateRoute\n","// ** React Imports\nimport { Fragment, lazy } from \"react\"\nimport { Navigate } from \"react-router-dom\"\n// ** Layouts \nimport BlankLayout from \"@layouts/BlankLayout\"\nimport VerticalLayout from \"@src/layouts/VerticalLayout\"\nimport HorizontalLayout from \"@src/layouts/HorizontalLayout\"\nimport LayoutWrapper from \"@src/@core/layouts/components/layout-wrapper\"\n\n// ** Route Components\nimport PublicRoute from \"@components/routes/PublicRoute\"\nimport PrivateRoute from '@components/routes/PrivateRoute'\n\n// ** Utils\nimport { isObjEmpty } from \"@utils\"\n\nconst getLayout = {\n  blank: <BlankLayout />,\n  vertical: <VerticalLayout />,\n  horizontal: <HorizontalLayout />\n}\n\n// ** Document title\nconst TemplateTitle = \"%s - dashboard\"\n\n// ** Default Route\nconst DefaultRoute = \"/\"\n\n// . Error Page\nconst Error = lazy(() => import(\"../../views/Error\"))\n\n// auth components \nconst Login = lazy(() => import(\"../../views/admin/auth/login\"))\nconst ProfileUpdate = lazy(() => import(\"../../views/admin/auth/Profile\"))\n\n// admin components routes\nconst DefaultPage = lazy(() => import(\"../../views/admin/dashboard/dashboard\"))\nconst DashboardPage = lazy(() => import(\"../../views/admin/dashboard/dashboard\"))\nconst TestPage = lazy(() => import(\"../../views/admin/dashboard/no-graph\"))\n\n// ** Utils\n// import { getUserData, getHomeRouteForLoggedInUser } from '../../utility/Utils'\n\n// const getHomeRoute = () => {\n//   const user = getUserData()\n//   if (user) {\n//     return getHomeRouteForLoggedInUser(user.role)\n//   } else {\n//     return '/login'\n//   }\n// }\n\n// ** Merge Routes\nconst Routes = [\n  // auth routes\n  {\n    path: \"/login\",\n    element: <Login />,\n    meta: {\n      layout: \"blank\",\n      publicRoute: true,\n      restricted: false // doChange with true\n    }\n  },\n\n  {\n    path: \"*\",\n    element: <Error />,\n    meta: {\n      layout: \"blank\"\n    }\n  },\n\n  // Admin Routes\n  {\n    path: \"/admin/dashboard\",\n    index: true,\n    element: <Navigate replace to={DefaultRoute} /> // doChange DefaultRoute \n  },\n  {\n    path: \"/\",\n    element: <DashboardPage />\n  },\n  {\n    path: \"/admin/profile/update/:id\",\n    element: <ProfileUpdate />\n  },\n  {\n    path: \"/test\",\n    element: <TestPage />\n  },\n  \n\n  // User routes\n \n  // {\n  //   path: \"/admin/user/detail/:id\",\n  //   element: <UserDetailPage />\n  // },\n  // {\n  //   path: \"/admin/user/update/:id\",\n  //   element: <UserUpdatePage />\n \n]\n\nconst getRouteMeta = (route) => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return { routeMeta: route.meta }\n    } else {\n      return {}\n    }\n  }\n}\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = []\n\n  if (Routes) {\n    Routes.filter((route) => {\n      let isBlank = false\n      // ** Checks if Route layout or Default layout matches current layout\n      if (\n        (route.meta && route.meta.layout && route.meta.layout === layout) ||\n        ((route.meta === undefined || route.meta.layout === undefined) &&\n          defaultLayout === layout)\n      ) {\n        let RouteTag = PrivateRoute // PublicRoute\n\n        // ** Check for public or private route\n        if (route.meta) {\n          route.meta.layout === \"blank\" ? (isBlank = true) : (isBlank = false)\n          // new line added by me\n          RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute\n        }\n        if (route.element) {\n          const Wrapper =\n            // eslint-disable-next-line multiline-ternary\n            isObjEmpty(route.element.props) && isBlank === false\n              ? // eslint-disable-next-line multiline-ternary\n              LayoutWrapper\n              : Fragment\n\n          route.element = (\n            <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\n              <RouteTag route={route}>{route.element}</RouteTag>\n            </Wrapper>\n          )\n        }\n\n        // Push route to LayoutRoutes\n        LayoutRoutes.push(route)\n      }\n      return LayoutRoutes\n    })\n  }\n  return LayoutRoutes\n}\n\nconst getRoutes = (layout) => {\n  const defaultLayout = layout || \"vertical\"\n  const layouts = [\"vertical\", \"horizontal\", \"blank\"]\n\n  const AllRoutes = []\n\n  layouts.forEach((layoutItem) => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\n\n    AllRoutes.push({\n      path: \"/\",\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes\n    })\n  })\n  return AllRoutes\n}\n\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\n","// ** Router imports\nimport { useRoutes } from \"react-router-dom\"\n\n// ** GetRoutes\nimport { getRoutes } from \"./routes\"\n\n// ** Hooks Imports\nimport { useLayout } from \"@hooks/useLayout\"\n\nconst Router = () => {\n  // ** Hooks\n  const { layout } = useLayout()\n\n  const allRoutes = getRoutes(layout)\n\n  const routes = useRoutes([...allRoutes])\n\n  return routes\n}\n\nexport default Router\n","import React, { Suspense } from \"react\"\n\n// ** Router Import\nimport Router from \"./router/Router\"\n\nconst App = () => {\n  return (\n    <Suspense fallback={null}>\n      <Router />\n    </Suspense>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}